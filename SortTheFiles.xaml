<Activity mc:Ignorable="sap sap2010" x:Class="Sort_The_Files" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="IN_ProjectFolder" Type="InArgument(x:String)" />
    <x:Property Name="IN_ZipFileName" Type="InArgument(x:String)" />
    <x:Property Name="OUT_FilesFolder" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>2014.4,2730.4</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Sort_The_Files_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="42">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Configuration</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="40">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Configuration</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This bot for sorting the files into folders depending on the naming of them it takes the zip file name and the project folder path to assign them to variable (FilesFolder), then we habe to edit the path and trim (.zip) at the end of it. After that the bot save all the files in that directory into an array (ExtractedFiles), then in a for loop we check every file after extracting just the name into a variable (ExtractedFilesNames) and with ismatch activity we check the name with our name pattern. If the checl is TRUE we create a folder naming it with the year of the file format and move the file in it, if the ismatch is FALSE then we create a folder with the current date. At the end we assign every folder to a variable to check it's content and count how many files in them." DisplayName="Sort_The_Files" sap:VirtualizedContainerService.HintSize="1994.4,2670.4" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="FolderExist" />
      <Variable x:TypeArguments="x:String" Name="NewFolder" />
      <Variable x:TypeArguments="x:String" Name="ExtractedFilesNames" />
      <Variable x:TypeArguments="x:Boolean" Name="CheckPattern" />
      <Variable x:TypeArguments="s:String[]" Name="SortedFolders" />
      <Variable x:TypeArguments="x:String" Name="FilesNumber" />
      <Variable x:TypeArguments="s:String[]" Name="ExtractedFiles" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign DisplayName="Get Folder path" sap:VirtualizedContainerService.HintSize="1952.8,60" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[OUT_FilesFolder]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[IN_ProjectFolder+"\"+IN_ZipFileName]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Trim(.zip)" sap:VirtualizedContainerService.HintSize="1952.8,60" sap2010:WorkflowViewState.IdRef="Assign_8">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[OUT_FilesFolder]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[OUT_FilesFolder.Split("."c)(0).ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Put all the files in an array" sap:VirtualizedContainerService.HintSize="1952.8,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[ExtractedFiles]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(OUT_FilesFolder)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="1952.8,1590.4" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[ExtractedFiles]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1917.6,1456" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Extract only the name of the file" sap:VirtualizedContainerService.HintSize="1876,60" sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[ExtractedFilesNames]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[split(item.ToString,"\").Last.ToString]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:IsMatch BuilderPattern="[\sa-zA-z]+_Report_[0-3][0-9][0-1][0-9]\d{4}" DisplayName="Match the naming pattern of the file" sap:VirtualizedContainerService.HintSize="1876,60" sap2010:WorkflowViewState.IdRef="IsMatch_1" Input="[ExtractedFilesNames]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ADV&quot;,&quot;OperationName&quot;:&quot;Advanced&quot;,&quot;OperationValue&quot;:&quot;[\\sa-zA-z]+_Report_[0-3][0-9][0-1][0-9]\\d{4}&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="[\sa-zA-z]+_Report_[0-3][0-9][0-1][0-9]\d{4}" RegexOption="IgnoreCase" Result="[CheckPattern]" />
            <If sap2010:Annotation.AnnotationText="If the naming is right create a folder with the file year, i not right then create the folder with the current year" Condition="[CheckPattern = True]" sap:VirtualizedContainerService.HintSize="1876,1163.2" sap2010:WorkflowViewState.IdRef="If_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="936.8,982.4" sap2010:WorkflowViewState.IdRef="Sequence_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Folder year" sap:VirtualizedContainerService.HintSize="895.2,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[NewFolder]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[ExtractedFilesNames.Split("_"c)(2).Substring(4).Split("."c)(0).ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:PathExists DisplayName="Check if the folder already exist" Exists="[FolderExist]" sap:VirtualizedContainerService.HintSize="895.2,90.4" sap2010:WorkflowViewState.IdRef="PathExists_2" Path="[OUT_FilesFolder+&quot;\&quot;+NewFolder]" PathType="Folder" />
                  <If sap2010:Annotation.AnnotationText="If the folder already exist then just move the file, if not then create one and move the file" Condition="[FolderExist = True]" sap:VirtualizedContainerService.HintSize="895.2,559.2" sap2010:WorkflowViewState.IdRef="If_3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="425.6,252.8" sap2010:WorkflowViewState.IdRef="Sequence_8">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:MoveFile ContinueOnError="{x:Null}" Destination="[OUT_FilesFolder+&quot;\&quot;+NewFolder]" DisplayName="Move the File to it's folder" sap:VirtualizedContainerService.HintSize="384,160" sap2010:WorkflowViewState.IdRef="MoveFile_3" Overwrite="True" Path="[OUT_FilesFolder+&quot;\&quot;+ExtractedFilesNames]" />
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap:VirtualizedContainerService.HintSize="425.6,378.4" sap2010:WorkflowViewState.IdRef="Sequence_5">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder with the file year" sap:VirtualizedContainerService.HintSize="384,85.6" sap2010:WorkflowViewState.IdRef="CreateDirectory_2" Path="[OUT_FilesFolder+&quot;/&quot;+NewFolder]" />
                        <ui:MoveFile ContinueOnError="{x:Null}" Destination="[OUT_FilesFolder+&quot;\&quot;+NewFolder]" DisplayName="Move the File to it's folder" sap:VirtualizedContainerService.HintSize="384,160" sap2010:WorkflowViewState.IdRef="MoveFile_4" Overwrite="True" Path="[OUT_FilesFolder+&quot;\&quot;+ExtractedFilesNames]" />
                      </Sequence>
                    </If.Else>
                  </If>
                  <Assign DisplayName="put it back to false" sap:VirtualizedContainerService.HintSize="895.2,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[FolderExist]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="895.2,982.4" sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Get the current date" sap:VirtualizedContainerService.HintSize="853.6,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[NewFolder]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[DateTime.Now.ToString("MMddyyyy").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:PathExists DisplayName="Check if the folder already exists" Exists="[FolderExist]" sap:VirtualizedContainerService.HintSize="853.6,90.4" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[OUT_FilesFolder+&quot;\&quot;+NewFolder]" PathType="Folder" />
                  <If sap2010:Annotation.AnnotationText="If the folder already exist then just move the file, if not then create one and move the file" Condition="[FolderExist = True]" sap:VirtualizedContainerService.HintSize="853.6,559.2" sap2010:WorkflowViewState.IdRef="If_2">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <ui:MoveFile ContinueOnError="{x:Null}" Destination="[OUT_FilesFolder+&quot;\&quot;+NewFolder]" DisplayName="Move the File to it's folder" sap:VirtualizedContainerService.HintSize="384,160" sap2010:WorkflowViewState.IdRef="MoveFile_1" Overwrite="True" Path="[OUT_FilesFolder+&quot;\&quot;+ExtractedFilesNames]" />
                    </If.Then>
                    <If.Else>
                      <Sequence sap:VirtualizedContainerService.HintSize="425.6,378.4" sap2010:WorkflowViewState.IdRef="Sequence_4">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder with the file year" sap:VirtualizedContainerService.HintSize="384,85.6" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[OUT_FilesFolder+&quot;/&quot;+NewFolder]" />
                        <ui:MoveFile ContinueOnError="{x:Null}" Destination="[OUT_FilesFolder+&quot;\&quot;+NewFolder]" DisplayName="Move the File to it's folder" sap:VirtualizedContainerService.HintSize="384,160" sap2010:WorkflowViewState.IdRef="MoveFile_2" Overwrite="True" Path="[OUT_FilesFolder+&quot;\&quot;+ExtractedFilesNames]" />
                      </Sequence>
                    </If.Else>
                  </If>
                  <Assign DisplayName="Put it back to false" sap:VirtualizedContainerService.HintSize="853.6,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[FolderExist]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <Assign DisplayName="Save folders in a variable" sap:VirtualizedContainerService.HintSize="1952.8,60" sap2010:WorkflowViewState.IdRef="Assign_9">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[SortedFolders]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[Directory.GetDirectories(OUT_FilesFolder)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For loop to choose every folder" sap:VirtualizedContainerService.HintSize="1952.8,487.2" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[SortedFolders]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="375.2,352.8" sap2010:WorkflowViewState.IdRef="Sequence_7">
            <Sequence.Variables>
              <Variable x:TypeArguments="s:String[]" Name="Files" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Put all the folder content in a variable" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_10">
              <Assign.To>
                <OutArgument x:TypeArguments="s:String[]">[Files]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(item.ToString)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_11">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[FilesNumber]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[Files.Count.ToString]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[FilesNumber.ToString+&quot; Files in &quot;+item.ToString.Split(&quot;\&quot;c).Last.ToString]" />
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
  </Sequence>
</Activity>